{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selector.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","items","createReducer","actions","state","filter","_","phonebookReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","getItems","getFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleNameChange","e","target","value","className","s","form","onSubmit","preventDefault","find","contact","duplicateValidator","alert","htmlFor","type","onChange","pattern","title","required","Filter","ContactList","map","item","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.39ee347a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1tat8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1YYud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__jC9zY\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction(\r\n  'contacts.Add',\r\n  (name, number) => {\r\n    return { payload: { name, number, id: uuidv4() } };\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAction(\r\n  'contacts/Delete',\r\n);\r\n\r\nexport const filterContact = createAction(\r\n  'contacts/Filter',\r\n);\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default phonebookReducer;\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [\r\n        FLUSH,\r\n        REHYDRATE,\r\n        PAUSE,\r\n        PERSIST,\r\n        PURGE,\r\n        REGISTER,\r\n      ],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(\r\n      phonebookPersistConfig,\r\n      phonebookReducer,\r\n    ),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../redux/actions';\r\nimport s from './ContactForm.module.css';\r\nimport { getItems } from 'redux/selector';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNameChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      // no default\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const duplicateValidator = name =>\r\n      items.find(contact => contact.name === name);\r\n\r\n    duplicateValidator(name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : dispatch(actions.addContact(name, number));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label htmlFor=\"\">Name</label>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label htmlFor=\"\">Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleNameChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/selector';\nimport * as actions from '../../redux/actions';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.filter}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={e =>\n            dispatch(actions.filterContact(e.target.value))\n          }\n        ></input>\n      </label>\n    </div>\n  );\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { getFilteredContacts } from 'redux/selector';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const items = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {items.map(({ name, number, id }) => (\n        <li className={s.item} key={uuidv4()}>\n          <p>\n            {name} : {number}\n          </p>\n          <button onClick={() => dispatch(actions.deleteContact(id))}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from 'components/ContactList';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}